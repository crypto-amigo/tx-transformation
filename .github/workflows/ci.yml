name: Build

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  check-and-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      # rust env
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy
      # cargo
      - uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: check

      - uses: actions-rs/cargo@v1
        with:
          command: fmt

      - uses: actions-rs/cargo@v1
        with:
          command: clippy

      - run: cargo test

      - run: python example/generate_txs.py > example/txs_generated.csv

      - run: cargo run -- example/txs_generated.csv
